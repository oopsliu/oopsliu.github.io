{"meta":{"title":"OOPSLIU","subtitle":"zheng's blog","description":null,"author":"ZHENG.L","url":"http://oopsliu.github.io"},"pages":[{"title":"About me","date":"2016-03-22T02:40:41.000Z","updated":"2016-03-28T04:00:35.016Z","comments":true,"path":"about/index.html","permalink":"http://oopsliu.github.io/about/index.html","excerpt":"","text":"G.I.S – Geographic Information Science I.G.S – I Go for Saving animals S.I.G – Super Intelligent Good people ╮(╯▽╰)╭"}],"posts":[{"title":"香港好吃的","slug":"hkfood","date":"2016-06-16T07:25:18.000Z","updated":"2016-06-16T08:17:04.758Z","comments":true,"path":"2016/06/16/hkfood/","link":"","permalink":"http://oopsliu.github.io/2016/06/16/hkfood/","excerpt":"","text":"personal香港好吃的备忘录，排名不分先后。(香港找好吃的必备app：OpenRice) 1. 九记牛腩位置不好找http://www.openrice.com/zh/hongkong/r-%E4%B9%9D%E8%A8%98%E7%89%9B%E8%85%A9-%E4%B8%AD%E7%92%B0-%E7%B2%B5%E8%8F%9C-%E5%BB%A3%E6%9D%B1-%E7%B2%89%E9%BA%B5-%E7%B1%B3%E7%B7%9A-r1618 2. 南记粉面连锁的，不过这家最好吃http://www.openrice.com/zh/hongkong/r-%E5%8D%97%E8%A8%98%E7%B2%89%E9%BA%B5-%E4%B8%AD%E7%92%B0-%E6%B8%AF%E5%BC%8F-%E7%B2%89%E9%BA%B5-%E7%B1%B3%E7%B7%9A-r2407 3. 豚王日式拉面，宇宙超级霹雳无敌好吃！！虽然贵，但是值了！饭点人很多要排长队，错峰去比较好http://www.openrice.com/zh/hongkong/r-%E8%B1%9A%E7%8E%8B-%E9%8A%85%E9%91%BC%E7%81%A3-%E6%97%A5%E6%9C%AC%E8%8F%9C-%E6%8B%89%E9%BA%B5-r75425 4. 新记车仔面要辣汤，加冬菇，萝卜http://www.openrice.com/zh/hongkong/r-%E6%96%B0%E8%A8%98%E8%BB%8A%E4%BB%94%E9%BA%B5-%E9%8A%85%E9%91%BC%E7%81%A3-%E6%B8%AF%E5%BC%8F-%E8%BB%8A%E4%BB%94%E9%BA%B5-r12797 5. 甘味赞岐手打乌冬连锁店，铁板牛肉粒+番茄的好吃http://www.openrice.com/zh/hongkong/restaurants?what=%E7%94%98%E5%91%B3 6. 一乐烧鹅叉烧好吃http://www.openrice.com/zh/hongkong/r-%E4%B8%80%E6%A8%82%E7%87%92%E9%B5%9D-%E4%B8%AD%E7%92%B0-%E6%B8%AF%E5%BC%8F-%E7%B2%89%E9%BA%B5-%E7%B1%B3%E7%B7%9A-r78351 7. 时新汉堡继Jack In the Box后第二次感叹汉堡原来可以这么好吃红磡天桥下，营业时间越来越短的妈咪鸡蛋仔旁边。。http://www.openrice.com/zh/hongkong/r-%E6%99%82%E6%96%B0%E5%BF%AB%E9%A4%90%E5%BA%97-%E7%B4%85%E7%A3%A1-%E6%B8%AF%E5%BC%8F-%E6%BC%A2%E5%A0%A1%E5%8C%85-r18220 8. 南北小厨ust店各种dimsumhttp://www.openrice.com/zh/hongkong/r-%E5%8D%97%E5%8C%97%E5%B0%8F%E5%BB%9A-%E8%A5%BF%E8%B2%A2-%E7%B2%B5%E8%8F%9C-%E5%BB%A3%E6%9D%B1-%E9%BB%9E%E5%BF%83-r1216 9. 汉和自助里比较好吃的http://www.openrice.com/zh/hongkong/r-%E6%BC%A2%E5%92%8C%E9%9F%93%E5%9C%8B%E6%96%99%E7%90%86-%E4%BD%90%E6%95%A6-%E9%9F%93%E5%9C%8B%E8%8F%9C-%E8%87%AA%E5%8A%A9%E9%A4%90-%E6%94%BE%E9%A1%8C-r175668 #10. Spice 8 # 好吃的印度菜http://www.openrice.com/zh/hongkong/r-%E8%BE%A3-%E7%B4%85%E7%A3%A1-%E5%8D%B0%E5%BA%A6%E8%8F%9C-%E5%92%96%E5%96%B1-r25735 11. 牛涮锅牛肉蘸香香的生鸡蛋http://www.openrice.com/zh/hongkong/r-%E7%89%9B%E6%B6%AE%E9%8D%8B-%E7%B4%85%E7%A3%A1-%E6%97%A5%E6%9C%AC%E8%8F%9C-%E7%84%A1%E8%82%89%E9%A4%90%E5%96%AE-r55293 12. 太兴鱼、奶茶、dimsumhttp://www.openrice.com/zh/hongkong/r-%E5%A4%AA%E8%88%88-%E6%B2%99%E7%94%B0-%E6%B8%AF%E5%BC%8F-%E7%87%92%E8%87%98-r14195 13. 芝麻绿豆偶遇王祖蓝但是那会不认识他径直走向他身后的老邢了http://www.openrice.com/zh/hongkong/r-%E8%8A%9D%E9%BA%BB%E7%B6%A0%E8%B1%86%E7%94%9C%E5%93%81%E5%B1%8B-%E7%B4%85%E7%A3%A1-%E7%B2%B5%E8%8F%9C-%E5%BB%A3%E6%9D%B1-%E7%94%9C%E5%93%81-%E7%B3%96%E6%B0%B4-r4216 14. 长洲岛的海鲜还有麦兜和包山","categories":[{"name":"LifeIsGood","slug":"LifeIsGood","permalink":"http://oopsliu.github.io/categories/LifeIsGood/"}],"tags":[{"name":"香港，好吃的","slug":"香港，好吃的","permalink":"http://oopsliu.github.io/tags/香港，好吃的/"}]},{"title":"ArcGIS Engine中调用地理处理工具（gp工具）的方法与注意事项","slug":"engineGP","date":"2016-06-14T08:49:06.000Z","updated":"2016-06-14T08:55:51.895Z","comments":true,"path":"2016/06/14/engineGP/","link":"","permalink":"http://oopsliu.github.io/2016/06/14/engineGP/","excerpt":"","text":"(以10.3版本下使用C#调用系统工具为例) 1. 在程序中调用gp是否需要安装Desktop软件？不用安装Desktop软件，安装ArcGIS Engine运行时以后就可以调用gp工具。 2. 如何查看gp工具的许可级别？可以直接在Desktop的帮助文档中定位到该工具的帮助页面，或者在Desktop软件中开启gp工具的执行页面，点击右下角的“tool help”按钮，也会弹出该工具的帮助页面。在帮助中，每个工具的许可级别都在页面的最上方的“License level”处标示出来。Desktop许可的Basic级别与esriLicenseProductCodeEngine许可相对应，Desktop许可的Standard级别与esriLicenseProductCodeEngineGeoDB相对应，而engine程序无法使用只有Desktop Advanced级别许可才能用的gp工具。 3. 如何通过代码调用gp工具？engine程序调用gp工具时使用的是相同的框架，只需要改变其中的具体的工具及参数即可，基本的框架可以使用以下代码： public void RunGP() { Geoprocessor gp = new Geoprocessor { OverwriteOutput = true }; try { ESRI.ArcGIS.AnalysisTools.Buffer tool = new ESRI.ArcGIS.AnalysisTools.Buffer(); tool.in_features = @&quot;D:\\in.shp&quot;; tool.out_feature_class = @&quot;D:\\out.shp&quot;; tool.buffer_distance_or_field = &quot;10&quot;; IGeoProcessorResult2 result = gp.Execute(tool, null) as IGeoProcessorResult2; } catch (Exception ex) { MessageBox.Show(ex.Message, &quot;GP Error&quot;); } finally { System.Text.StringBuilder sb = new System.Text.StringBuilder(); for (int i = 0; i &lt; gp.MessageCount; i++) sb.AppendLine(gp.GetMessage(i)); if (sb.Capacity &gt; 0) MessageBox.Show(sb.ToString(), &quot;GP Messages&quot;); } } 代码中调用的是Buffer工具，如果要调用其他工具的话只需替换成对应的工具并按工具要求填写参数即可。 4. 不知道参数如何填写怎么办？可以先在Desktop中使用想要的参数执行gp成功，然后在菜单栏–&gt;geoprocessing–&gt;results中打开results窗口，查看刚才执行成功的gp历史，在inputs项中查看或直接复制各参数的填写方式到代码中即可。 5. 可以使用AO对象如IFeatureClass作为gp工具的参数吗？强烈建议不要用AO对象作为gp参数，而使用硬盘上的绝对路径或字符串作为参数。只有极少数工具可以接收AO对象作为参数，但是官方并没有公布是哪些工具，所以为了避免执行失败，最好都用绝对路径。 6. SDE中的数据作为参数的话如何填写？填写 .sde结尾的SDE连接文件的绝对路径作为参数，如“D:\\connection to oracle.sde\\SDE.myFeatureClass”。如果已经通过Desktop成功连接过SDE的话，那么会默认创建一个.sde连接文件，如C:\\Users\\Administrator\\AppData\\Roaming\\ESRI\\Desktop10.3\\ArcCatalog\\Connection tooracle.sde，如果没有连接过的话，可以通过IWorkspaceFactory.Create()或gp工具Create ArcSDE Connection File来创建。 7. 执行失败怎么办？如上面的示例代码中的方式，把执行gp的语句放进try-catch-finally的结构体中，并用IGeoProcessor.GetMessage尝试获取具体的报错信息，如许可级别不够、参数填写错误等。 8. 关于在engine中调用gp是否有官方帮助文档？有，10.3版本在线帮助地址：http://resources.arcgis.com/en/help/arcobjects-net/conceptualhelp/#/Using_geoprocessing/0001000004mm000000/ 调用自定义gp工具、gp服务、和其他高级技能都可以参考官方帮助文档。","categories":[{"name":"Technology","slug":"Technology","permalink":"http://oopsliu.github.io/categories/Technology/"}],"tags":[{"name":"ArcGIS","slug":"ArcGIS","permalink":"http://oopsliu.github.io/tags/ArcGIS/"},{"name":"Engine","slug":"Engine","permalink":"http://oopsliu.github.io/tags/Engine/"}]},{"title":"ArcGIS性能调优","slug":"dev2016","date":"2016-06-01T09:38:17.000Z","updated":"2016-06-03T02:34:56.938Z","comments":true,"path":"2016/06/01/dev2016/","link":"","permalink":"http://oopsliu.github.io/2016/06/01/dev2016/","excerpt":"","text":"我们可以把arcgis平台想象成一间咖啡店。客人来到咖啡店，从菜单里挑选自己需要的饮料或者食物，咖啡店的工作人员为客人提供他们要求的服务。在每天的不同时间段里咖啡店的繁忙程度也不相同，比如早上上班时间或者午饭时间来咖啡店的客人就特别多，经常会有人排队等在门口。作为咖啡店的老板，为了在减少客人排队等候时间的同时扩大咖啡店的生意，就需要提高整个店的运营效率，也就是进行性能调优的工作。 (《Computer Networks (5th Edition) 》by Tanenbaum ) 概念首先介绍几个相关的概念。性能，指的是完成某项任务的速度，或者也可以用时长来衡量，完成的速度越快，响应时间越短，那么性能就越好。可伸缩性，指的是在维持现有性能的前提下，完成更多任务、输出更多结果的能力。比如一条公路原本有2条车道，车流量有1000辆车每小时，平均车速在60公里左右，现在要求在平均车速不降低的条件下，将车流量增加到2000辆车每小时，那么就可以通过增加两条车道的方式扩展这条公路的通行能力。容量，指的是系统的最大承载能力，比如四环路的最大容量是一万辆车每小时，那么超过这个容量的话很有可能就会造成系统的拥堵或者故障。瓶颈，指的是会影响性能和容量的关键限制因素，比如高速公路的收费站，就算路很宽、车速很快，但是在收费站也会被拦截下来，影响整体的通行速度。 系统设计在理想情况下，我们在搭建arcgis平台之前，首先应该先对整个系统做好规划。在做规划的时候需要思考很多问题，比如系统需要支持多少用户的访问？需要配置哪些硬件设备？需要多少核的cpu支持？用户的工作流都有哪些？工作流的服务时间要多长？系统的容量需要多大？等等。 如果系统设计规划的好的话，能够使资源的利用率最大化，用更少的硬件和花费得到更好的性能和可扩展性，同时也能使用户得到较好的使用体验。相反，如果在系统搭建前期没有做出合理的规划和设计的话，有可能会在使用中发现不可避免的问题，这样不得不推翻重建，会大大的增加人力和物力的投入，是非常不划算的做法。如果老板在开咖啡店前没有事先做好市场调研和准备工作，草率的开了一家店铺后发现根本无法应对客户过多的状况，还要再对店面进行施工，大把的时间和金钱都白白浪费掉了。所谓磨刀不误砍柴工，系统设计能够为整个平台的运作带来巨大的好处，是不可轻视的一项工作。 在进行系统设计之初就需要考虑硬件条件的限制。CPU的性能和核数会对服务响应速度及系统容量造成影响，在服务数量增多时，内存会成为一个重要的影响指标，当然CPU核数越多、内存越大，整个系统的性能会越好。影像服务和多数地理处理服务都依赖于磁盘的读写，所以硬盘的容量和读写速度等也会对系统造成比较大的影响。网络条件，比如带宽和延迟等在Web GIS系统中是重要的影响因素，尤其是在低带宽部署系统时需要特别慎重的考虑。 根据英特尔创始人之一戈登·摩尔（Gordon Moore）提出来的摩尔定律，每一美元所能买到的电脑性能，将每隔一年半到两年翻一倍。我们看到左边的表格是硬件系统性能增长的情况，右边的表格是ArcGIS for Server动态地图服务性能的增长情况，基本上还是达到了摩尔定律的标准的。 在进行arcgis平台的系统设计时我们可以使用esri官方提供的工具System Designer，可以在arcgis online网站上免费下载安装。 客户端客户端是整个平台中最直观体验到性能问题的一层，比如在手机上加载地图很慢。客户端就好像在咖啡店里点餐的顾客，如果服务员把顾客点的东西用笔记在纸上，再拿去制作的话，速度就很慢。如果升级成现代的电子点餐的系统，就可以大大提高效率。同样，在我们的客户端也可以采用一些优化方式来提升性能。 在客户端使用的地图应用大体可分为底图和业务数据两大类，其中底图又可以分为传统的栅格切片和最新推出的矢量切片。从上午的演示中大家应该已经看到了，矢量切片本身的文件大小很小，所以在前端加载时能够极大的提升显示速度，并且还可以支持动态的更改样式等新的特性。在开发前端应用程序时，选择合适的开发包也可以提升应用程序的性能，比如使用最新的Runtime Quartz版本不仅可以支持矢量切片，内部对其他功能也进行了优化，带来性能的提升。另外，可以选择当前潮流所指的敏捷开发方式，使用Web AppBuilder、AppStudio等来进行应用程序的配置，在很短的时间内不需要写任何代码就可以完成应用程序的开发，大大缩减了需要投入的学习成本和维护人员投入。 Portal for ArcGISPortal作为arcgis平台的门户，是平台的控制访问中枢，用于整合资源和协同分享。Portal就像是咖啡店的店面，店面里既有需要现点现做的咖啡，也有由别的供货商提供的现成的、做好的罐装颜料、蛋糕、三明治等等，顾客来到店里可以自由选择，自由组合。我们在用Portal共享地图时也可以使用Portal中提供的Analysis工具对数据进行优化，从Data中提取Information，既能美化可视化效果，又能减少前端网络通信量。 ArcGIS for Server客户端通过Portal访问到的服务，实际上是由arcgis server提供的。server就像是咖啡店的服务员，为客人提供所要求的服务。当客流量变大时，为了减少客人排队等候的时间，一是可以加快单次服务的速度，也就是提高系统性能；二是可以增加人手，也就是增大系统容量。首先从server的部署架构上来说，从10.4版本开始默认开启了单集群模式。单集群模式听起来好像不如多集群的好，实际上却能带来更稳定的效率。多集群模式的设计意图是为了能够尽快的响应请求，在集群内进行负载均衡，将请求转发给空闲的机器。但是这样的话为了保持机器间状态的更新，需要进行大量的网络通信，由此带来的网络带宽占用和不稳定性很可能会有更大的负面影响。所以对于一般情况，使用单集群模式会为平台整体带来更好的性能。但是对于特别的业务流程，可能多集群模式的利会远大于弊，这时还可以手动开启多集群模式。具体情况需要根据对实际使用情况的监控来调整。 不同类型的服务本身的性能也有高低之分。以最常用的功能，REST导出地图为测试基准，我们可以看到缓存过的服务要比动态地图服务的性能高。动态地图服务会在前端加载时进行动态投影，以及在服务器上动态的渲染出图，响应速度相对就会下降，而缓存服务已经预先在硬盘上生成了切片文件，出图时直接去读取相应的瓦片，几乎不涉及内存运算，处理速度快，CPU占用率低。而一些复杂的服务，比如地理处理服务或者网络分析服务，往往涉及较多的内存运算，所以在性能上来说是比较低的，需要相对比较长的时间来响应请求。既然缓存地图在性能上占优，我们就应该尽量多的使用缓存服务。 (http://blog.csdn.net/linghe301/article/details/20469591) 矢量切片的生成速度非常快，但是传统的栅格切片生成速度就比较慢，所以在使用栅格切片时也有一些技巧需要注意。首先是在更新缓存时，尽量隔离出需要更新的区域，只更新这个范围内的切片，可以节省大量时间。这个可以通过在生成切片时指定一个要素类的范围来完成。另外就是按需生成缓存，某些不常用的地区可以设置为在有客户端第一次访问的时候才生成切片。当缓存量很大时，将数据源拷贝到服务器所在机器，缓存创建速度会更快且更稳定。创建缓存时会对数据进行成千上万次请求，如果数据在本地，切片绘制会更迅速。理想的方法是在站点的每台GIS服务器的相同路径下放置相同的文件数据库。对文件数据库进行注册，在地图文档中，数据源使用本地路径。如果缓存速度与缓存占用磁盘空间相比，更在意创建速度的话，那么就应该避免使用PNG格式而用mixed格式，因为png格式会计算最佳位深，虽然能够减少文件大小，但是会大大增加计算时间。 服务实例数的设置是影响服务性能最主要的因素。在服务管理器的池化设置中可以指定某个服务最小和最大的实例数是多少。实例就是用来处理请求的最小的单位，一个实例在系统资源管理器中对应一个arcsoc.exe进程，比较特殊的是gp服务，一个gp服务的实例会启动两个arcsoc进程。在服务启动时，会根据配置的最小实例数启动相应的arcsoc进程，当服务请求增加时，server会自动启动更多的进程，但是不会超过设置的最大实例数。 最大最小实例数的设置是针对站点内的单台机器的。比如站点内一共有三台机器，服务1的最大实例数设置为2，服务2的最大实例数设置为3，那么因为在站点内共有三台机器，实例数的设置乘以3倍，也就是整个站点内服务1的总实例数为6，服务2的总实例数为9。 那么为服务配置多少个实例数合适呢？这个是需要根据请求量和cpu的核数来决定的。在服务启动时会根据最小实例数启动相应的soc进程，负载增加后server会在最大实例数范围内自动配置更多实例来响应请求，也就会启动更多的soc进程，更多的进程就要求cpu有更多的核数来处理。根据esri官方的测试结果，推荐的最大实例数设置为：为一般的动态地图服务配置cpu核数的3-5倍的实例数，而gp服务的话配置核数+1个实例数。比如一台8核的服务器，可以为动态地图服务配置24-40个实例数，为gp服务配置9个实例数。缓存服务的话由于cpu占用率很低，可以多根据使用情况多配置一些实例数。内存的话官方推荐每核配置3个G的内存，其中操作系统会占用一半左右，剩下的1.5G对于每核3-5个实例数的配置可以保证比较好的稳定性。 举个例子，假如预估的用户并发量有1000个，我们可以先记录下平均操作一次时长，比如需要0.2秒，假设用户在等待响应返回的可承受时长为1秒，那么1个实例就可以处理5个请求，1000个并发就需要200个实例，如果设置为每核5个实例数的话，就需要40个cpu核数，每核3G内存，一共需要120G的内存。当然这是理论值，可以为系统建设提供有效的参考数值，具体情况还需要对系统进行更全面的测试和监控才行。 我们都知道潮汐车道，早高峰的时候进城的车辆多，就把进城方向的车道调整的宽一些，晚高峰的时候出城的车辆多，再把出城方向的车道调整的宽一些。同样，在内存和CPU有限的情况下，需要对资源进行动态合理的调配，将空闲的实例释放掉，以供其他服务来使用。我们可以在服务器管理器中设置超时时长，比如减少客户端可占用服务的最长时间，在高峰时调高客户端可等待的最长时间，以及缩短空闲实例可运行的时间，当实例空闲一段时间后，就会被放回到进程池中，减小CPU的占用率。 另外还可以设置服务进程为高隔离或低隔离。高隔离的情况下，一个soc进程只对应一个实例，而低隔离的情况下一个soc可以对应多个实例。低隔离对内存的占用量比较下，但是稳定性比较差，而且如果进程终止的话会影响多个实例。高隔离虽然对内存的占用量比较高，但是稳定性好，进程终止时也只会影响一个实例。所以推荐的方式是使用高隔离的设置。需要注意对于gp服务这种需要比较复杂计算的服务来说，为了保证性能和稳定性，系统中默认设置为了高隔离，而不能够变成成为低隔离方式。 进程的回收指的是每隔多少个小时server会将该服务关闭再重新启动，定期回收有助于维护性能和稳定性。我们可以通过监测请求量，定期在访问最少的时间段内执行回收重启的操作。 server的日志中提供了统计server各项数据的功能，还可以自定义项目生成统计数据。这些数据都是我们进行系统性能优化时很好的参考数据。 在arcgis online上还可以下载其他的一些测试工具，比如system test和system monitor等等，这些工具都是esri官方提供的，专门针对arcgis平台进行测试的工具，可以提供对于空间数据和gis流程自动化测试的功能。我们可以在arcgis online上搜索拥有者是EnterpriseImp团队，并且勾选上桌面应用程序，就能下载到这些工具了。 （2016开发者大会讲座记录）","categories":[{"name":"Technology","slug":"Technology","permalink":"http://oopsliu.github.io/categories/Technology/"}],"tags":[{"name":"arcgis","slug":"arcgis","permalink":"http://oopsliu.github.io/tags/arcgis/"},{"name":"性能","slug":"性能","permalink":"http://oopsliu.github.io/tags/性能/"}]},{"title":"Hexo备忘录3 -- 多机同步","slug":"hexosync","date":"2016-05-31T02:35:15.000Z","updated":"2016-05-31T02:57:51.664Z","comments":true,"path":"2016/05/31/hexosync/","link":"","permalink":"http://oopsliu.github.io/2016/05/31/hexosync/","excerpt":"","text":"公司和家里两台电脑的情况下（或者重装系统后）同步hexo的问题，经过亲测决定采用以下方式： node包和hexo等环境在两台机器上都手动配好（包括主题），不会经常变动； 经常更新的博客内容文件夹source放到github上托管，方便从不同机器上pull/push； hexo配置文件和主题配置文件不会经常更新，但是重新配置也有点麻烦，所以放到onedrive上备份，需要重新安装的时候可以直接使用； 试过整个hexo文件夹放到onedrive里，一是慢二是貌似posts的日期改了，所以评论都没有了。其他网盘基本都死掉了，百度云毫无理由的就是不！喜！欢！坚果云免费版流量太小，整体同步不够用，而且在准备开发者大会的时候出现了由于流量不够同步没成功，把ppt搞坏了！坑爹，果断删。 具体更新步骤怕忘记录一下： 在hexo source下添加新文件后，hexo g, hexo d git add . git commit -m “commit what了” git push origin master到云端的repo上 另一台机器同步的时候把云端的先pull下来，更新后再重复1-4提交到云端","categories":[{"name":"Technology","slug":"Technology","permalink":"http://oopsliu.github.io/categories/Technology/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://oopsliu.github.io/tags/Hexo/"},{"name":"git","slug":"git","permalink":"http://oopsliu.github.io/tags/git/"}]},{"title":"ArcGIS Python Addins","slug":"pythonaddin","date":"2016-04-08T09:43:40.000Z","updated":"2016-05-31T01:26:38.872Z","comments":true,"path":"2016/04/08/pythonaddin/","link":"","permalink":"http://oopsliu.github.io/2016/04/08/pythonaddin/","excerpt":"","text":"Python addins经常显示[ Missing ]，比较崩溃，以下是常见原因： 脚本中有中文等特殊字符（包括注释），但未设置适合的编码。可以尝试把中文改为英文，或在脚本首行加入编码类型，如# -- coding: utf-8 --。 缩进格式不统一，有的地方是空格缩进，有的地方是Tab缩进。 文件路径中不能含有中文或空格。 系统环境变量的Path变量中没有Python27路径，如C:\\Python27\\ArcGIS10.4;C:\\Python27\\ArcGIS10.4\\Scripts;C:\\Python27\\ArcGIS10.4\\Lib。","categories":[{"name":"Technology","slug":"Technology","permalink":"http://oopsliu.github.io/categories/Technology/"}],"tags":[{"name":"arcgis","slug":"arcgis","permalink":"http://oopsliu.github.io/tags/arcgis/"},{"name":"python","slug":"python","permalink":"http://oopsliu.github.io/tags/python/"},{"name":"desktop","slug":"desktop","permalink":"http://oopsliu.github.io/tags/desktop/"}]},{"title":"Map Story","slug":"storymap","date":"2016-03-25T09:55:20.000Z","updated":"2016-03-28T07:03:54.997Z","comments":true,"path":"2016/03/25/storymap/","link":"","permalink":"http://oopsliu.github.io/2016/03/25/storymap/","excerpt":"","text":"http://lzesrichina.maps.arcgis.com/apps/MapJournal/index.html?appid=afa81c2156f54a6396bbbc77c964e28c p.s. 图片放在了poco相册中，一开始放在豆瓣相册中外链无法访问。","categories":[{"name":"LifeIsGood","slug":"LifeIsGood","permalink":"http://oopsliu.github.io/categories/LifeIsGood/"}],"tags":[{"name":"map story","slug":"map-story","permalink":"http://oopsliu.github.io/tags/map-story/"}]},{"title":"Hexo备忘录2 -- 主题theme","slug":"hexotheme","date":"2016-03-23T07:48:12.000Z","updated":"2016-03-23T16:17:04.000Z","comments":true,"path":"2016/03/23/hexotheme/","link":"","permalink":"http://oopsliu.github.io/2016/03/23/hexotheme/","excerpt":"","text":"对外协来说，内容什么的都是浮云，赶紧改个主题才是正经事！ Clone Theme在官网上相中了Hueman主题，先用clone命令导到本地来： git clone https://github.com/ppoffice/hexo-theme-hueman.git themes/hueman 在克隆过来的hueman文件夹里，把主题的配置文件_config.yml.example后缀example去掉，变成可用的config文件，然后修改Hexo整体的配置文件，即Hexo文件夹下的_config.yml，把theme项改成hueman: # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: hueman 执行hexo g, hexo s -p 5000在本地预览下，主题已经不是默认的landscape，而是Hueman主题了。 添加评论功能Hueman主题默认的评论是Disqus，不知道是什么。。评论功能有三种选择，默认的Disqus，多说，和有言，虽然都没听说过是什么，但是看着多说比较顺眼，决定改成多说！去多说的官网（http://duoshuo.com/)注册个账号，然后创建站点，站点地址就填Hexo博客的地址，即http://oopsliu.github.io,再填一个多说域名，如http://oopsliu.duoshuo.com,创建成功后，将多说域名的前缀写入theme的配置文件里： # Comment comment: disqus: #hexo-theme-hueman # enter disqus shortname here duoshuo: oopsliu youyan: # enter youyan uid here 添加站内搜索默认的搜索引擎是google，说多了都是泪，必须得换。。可以换成百度站内搜索，莫名的就不喜欢，只剩一个选择了，就是Swiftype。配置起来稍微有点麻烦，不过人家也是免费的，麻烦就麻烦点吧，配置参考步骤：http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html然后将Install Code填写到主题的配置文件里： # Search search: swiftype: v69sgvBSK3QqXXXXXXXX baidu: false 其他配置网站链接直接在配置文件里添加链接就行，但是要注意空格的问题： # Miscellaneous miscellaneous: open_graph: # see http://ogp.me fb_app_id: fb_admins: twitter_id: google_plus: links: ArcGIS知乎: http://zhihu.esrichina.com.cn/ Hexo: http://hexo.io About页面用 $ hexo new page about 会在source/about中生成index.md，然后在主题的配置文件里填写about页面的地址： # Menus menu: Home: / # Delete this row if you don&apos;t want categories in your header nav bar Categories: About: /about/index.html 其他还改了几个配置项，比如网站logo、收藏夹图标favicon、主题颜色、分享至jiathis等等；另外修改/Hexo/scaffolds/post.md,添加上categories项，之后new出来的.md文件就都带分类了，Hueman主题会根据文章的分类自动给添加到导航栏上。","categories":[{"name":"Technology","slug":"Technology","permalink":"http://oopsliu.github.io/categories/Technology/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://oopsliu.github.io/tags/Hexo/"},{"name":"theme","slug":"theme","permalink":"http://oopsliu.github.io/tags/theme/"},{"name":"主题","slug":"主题","permalink":"http://oopsliu.github.io/tags/主题/"}]},{"title":"Hexo备忘录1 -- 安装","slug":"hexoinstall","date":"2016-03-22T02:58:06.000Z","updated":"2016-03-23T16:12:34.000Z","comments":true,"path":"2016/03/22/hexoinstall/","link":"","permalink":"http://oopsliu.github.io/2016/03/22/hexoinstall/","excerpt":"","text":"CostTime：自己摸索1day左右，如果一切顺利，按照此memo应该1hour就ok了Money：free 操作系统：办公室：win10家里：win10 安装Git、Node.js1 安装Git后（https://www.git-scm.com/）,可以在右键菜单中看到Git Bash的选项： 2 安装Node.js:https://nodejs.org/en/download/ 安装Hexo新建一个文件夹用来存放Hexo的文件们，第一次安装的时候放到了D盘上，后来发现如果想在多台电脑上发博客，比如办公室和家里两台电脑，就没法搞了，所以第二次直接把文件夹建到了OneDrive里。据说Dropbox的话同步时会生成其他文件，导致Hexo无法使用，未亲测。Anyway，放到OneDrive上貌似可行哦，虽然需要部署两次Hexo，而且同步文件可能会慢一些，但是我的需求也不会经常发博经常同步，所以应该可以满足了。 在OneDrive上新建一个文件夹HexoSync，然后在文件夹内右键Git Bash Here，在当前目录下执行安装命令： $ npm install -g hexo-cli 安装好后，再执行init命令生成各种静态文件： $ hexo init 成功后安装依赖包： $ npm install 安装好后执行$ hexo g重新生成静态文件： 然后把自己的电脑当做服务器，就可以在本地查看了。Hexo默认使用的端口是4000，和ArcGIS Server冲突，所以在使用本地服务器预览时得带个参数，把端口号改了： $ hexo s -p 5000 Git中显示本地服务器已启动后，在浏览器中打开localhost:5000, 就可以看到最新的静态网页们，也就是最新的Hexo博客的样子了。 部署到GitHub上部署在本地只能自嗨看看，要想让其他人也看到需要放到互联网能够访问到的服务器上。对域名有要求的可以花钱买个域名和服务器，没啥特殊要求的放在GitHub上托管我看就不错~ 1 注册GitHub账号，新建一个repository，与自己的账户同名，比如我的github用户名是oopsliu，新建的repository就是oopsliu.github.io 2 修改Hexo文件夹（我的文件夹名为HexoSync）下的_config.yml文件，配置deploy项的设置： `deploy: type: git repo: &lt;repository url&gt; branch: [branch] message: [message]` 如： `deploy: type: git repo: https://github.com/oopsliu/oopsliu.github.io branch: master` 3 在HexoSync文件夹内运行Git Bash，安装github的部署工具： `$ npm install hexo-deployer-git --save` 4 重新生成静态文件，并执行部署: `$ hexo g $ hexo d` 5 git bash中显示部署成功 “Deploy done: git”后，稍等个一两分钟，等文件都同步完成，浏览器打开github上repo的url，如oopsliu.github.io，应该就可以看到部署好的博客了。 写博客执行$ hexo new articleName就会在 HexoSync\\source_posts 文件夹下对应生成一个.md文件，可以直接使用markdown语法来编辑。删除了.md文件就是删除了该篇文章。试了几个markdown编辑器，马克飞象绑定Evernote，存取本地文件不方便，Cmd免费版的不能传本地图片，最后决定使用MarkDownPad。但是win10下html解析有问题，根据官网提供的解决方案安装了个Awesomium 1.6.6解决。代码段换行的问题目前觉得最好的方式是用空格空格回车开始代码段，然后整个代码段缩进一下就行。 memo 每次更改过配置后，都需要hexo g重新生成静态文件，再hexo s或hexo d部署到本地或github上查看；更改了文章的话不用重新generate，直接刷新就行 用notepad++编辑配置文件的时候，需要注意空格的问题，否则有可能读不到配置 多个标签要用[]括起来，中间用逗号隔开","categories":[{"name":"Technology","slug":"Technology","permalink":"http://oopsliu.github.io/categories/Technology/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://oopsliu.github.io/tags/Hexo/"},{"name":"安装","slug":"安装","permalink":"http://oopsliu.github.io/tags/安装/"}]}]}